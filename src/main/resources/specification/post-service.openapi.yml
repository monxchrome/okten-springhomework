openapi: 3.0.3

info:
  title: Post Service API
  description: |-
    OpenAPI specification example based on Post model
  version: 0.0.1
  # API-first design

servers:
  - url: http://localhost:8080/api/v1

tags:
  - name: post

paths:
  "/posts":
    get:
      security:
        - BearerAuth: []
      tags:
        - post
      summary: "Get all posts"
      description: "Fetch all existing posts"
      operationId: getPosts
      responses:
        '200':
          $ref: "#/components/responses/PostList"
        '400':
          description: Invalid request
    post:
      security:
        - BearerAuth: []
      tags:
        - post
      summary: "Create post"
      operationId: createPost
      requestBody:
        $ref: "#/components/requestBodies/Post"
      responses:
        '201':
          $ref: "#/components/responses/Post"
        '400':
          description: Invalid request
        '422':
          description: Validation exception
  "/posts/{id}":
    get:
      security:
        - BearerAuth: []
      tags:
        - post
      summary: "Get specific post"
      description: "Get post by id"
      operationId: getPost
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: "Post ID"
      responses:
        '200':
          $ref: "#/components/responses/Post"
        '400':
          description: Invalid request
  "/ws/comments":
    post:
      security:
        - BearerAuth: []
      tags:
        - comment
      summary: "Create comment"
      operationId: createComment
      requestBody:
        $ref: "#/components/requestBodies/Comment"
      responses:
        '201':
          $ref: "#/components/responses/Comment"
        '400':
          description: Invalid request
        '422':
          description: Validation exception
  "/api/auth/signin":
    post:
      security:
        - BearerAuth: []
      tags:
        - auth
      summary: "Sign In"
      operationId: signIn
      requestBody:
        $ref: "#/components/requestBodies/SignIn"
      responses:
        '201':
          $ref: "#/components/responses/SignIn"
        '400':
          description: Invalid request
        '422':
          description: Validation exception
  "/api/auth/refresh":
    post:
      security:
        - BearerAuth: []
      tags:
        - auth
      summary: "Refresh"
      operationId: refresh
      requestBody:
        $ref: "#/components/requestBodies/Refresh"
      responses:
        '201':
          $ref: "#/components/responses/Refresh"
        '400':
          description: Invalid request
        '422':
          description: Validation exception


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 10
        topic:
          type: string
          example: "Hello world"
          minLength: 1
          maxLength: 64
        description:
          type: string
          example: "Lorem Ipsum"
          minLength: 1
          maxLength: 64
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 10
        postId:
          type: integer
          format: int64
          readOnly: true
          example: 10
        text:
          type: string
          example: "Lorem Ipsum"
          minLength: 1
          maxLength: 64
    SignIn:
      type: object
      properties:
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          minLength: 1
          maxLength: 64
        refreshToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gb2UiLCJpYXQiOjE1MTYyMzkwMjJ9.pDtE-M44fneD--ljZ9PY3hjPF5HlkNd64_s9w5QdEls"
          minLength: 1
          maxLength: 64
    Refresh:
      type: object
      properties:
        refreshToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gb2UiLCJpYXQiOjE1MTYyMzkwMjJ9.pDtE-M44fneD--ljZ9PY3hjPF5HlkNd64_s9w5QdEls"
          minLength: 1
          maxLength: 64
  responses:
    Post:
      description: Post
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Post'
    Comment:
      description: Comment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Comment'
    PostList:
      description: Post list
      content:
        application/json:
          schema:
            type: object
            items:
              $ref: '#/components/schemas/Post'
    SignIn:
      description: Post list
      content:
        application/json:
          schema:
            type: object
            items:
              $ref: '#/components/schemas/SignIn'
    Refresh:
      description: Post list
      content:
        application/json:
          schema:
            type: object
            items:
              $ref: '#/components/schemas/Refresh'
  requestBodies:
    Post:
      description: Post to be created
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Post'
    Comment:
      description: Comment to be created
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Comment'
    SignIn:
      description: Sign In
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignIn'
    Refresh:
      description: Refresh
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Refresh'
